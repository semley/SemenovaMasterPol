//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Semenova_MasterPol
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Partner
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Partner()
        {
            this.PartnerProduct = new HashSet<PartnerProduct>();
            this.PartnerSalesHistory = new HashSet<PartnerSalesHistory>();
        }
    
        public int Partner_ID { get; set; }
        public int Partner_Type { get; set; }
        public string Partner_Name { get; set; }
        public string Surname_Director { get; set; }
        public string Name_Director { get; set; }
        public string Patronymic_Director { get; set; }
        public string Email { get; set; }
        public string Phone { get; set; }
        public string Address { get; set; }
        public string INN { get; set; }
        public int Rating { get; set; }
        public string Logo { get; set; }
        public string Places_Sales { get; set; }
    
        public virtual Partner_Type1 Partner_Type1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PartnerProduct> PartnerProduct { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PartnerSalesHistory> PartnerSalesHistory { get; set; }

        public int Discount        {
            get            {
                int totalPartnerProducts = PartnerProduct.Sum(p => p.Count); // Суммирование количества продуктов
                
                if (totalPartnerProducts < 10000)                    return 0;
                if (totalPartnerProducts >= 10000 && totalPartnerProducts < 50000)                    return 5;
                if (totalPartnerProducts >= 50000 && totalPartnerProducts < 300000)                    return 10;
                else                    return 15;
                            }
        }
    }
}
